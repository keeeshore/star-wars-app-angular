{"version":3,"sources":["./src/app/film/film.component.ts","./src/app/film/film.component.html","./src/environments/environment.ts","./src/app/services/http.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/person/person.component.html","./src/app/person/person.component.ts","./src/app/services/people.service.ts","./src/app/people/people.component.html","./src/app/people/people.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\r\nimport {HttpService} from '../services/http.service';\r\nimport {PeopleService} from '../services/people.service';\r\n\r\nexport interface FilmProps {\r\n  title: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-film',\r\n  templateUrl: './film.component.html',\r\n  styleUrls: ['./film.component.scss']\r\n})\r\nexport class FilmComponent implements OnInit {\r\n\r\n  @Input() url: string;\r\n\r\n  film: FilmProps = { title: 'loading...' };\r\n\r\n  constructor(\r\n    private httpService: HttpService,\r\n    private peopleService: PeopleService,\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log('FilmComponent url :: ', this.url);\r\n    this.httpService.get(this.url).subscribe(\r\n      (response: FilmProps) => {\r\n        console.log('Film get response: ', response);\r\n        this.film = response;\r\n        this.peopleService.updateFilm(this.film);\r\n      },\r\n      (err: any) => {\r\n        console.log('Film get response: ', err);\r\n      },\r\n      () => {\r\n        console.log('Film get FINAL DONE: ');\r\n      });\r\n  }\r\n\r\n}\r\n","<span>{{film.title}}</span>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  get(url: string, opt: any = {}): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    // return this.http.get(url.replace('http://', 'https://'), httpOptions);\r\n    return this.http.get(url, httpOptions);\r\n  }\r\n\r\n  post(url: string, data: any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n      })\r\n    };\r\n    return this.http.post(url, data, httpOptions);\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {HttpService} from './services/http.service';\r\nimport {PeopleService} from './services/people.service';\r\nimport {PersonProps} from './person/person.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'star-wars-ng';\r\n\r\n  constructor(\r\n    private httpService: HttpService,\r\n    private peopleService: PeopleService,\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.peopleService.asPersonObservable().subscribe(\r\n      (person: PersonProps) => this.title = person.name,\r\n      (error: any) => { },\r\n      () => {  },\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"App\">\r\n  <h1>Person details {{title}}</h1>\r\n  <app-people></app-people>\r\n  <app-person></app-person>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport {HttpService} from './services/http.service';\r\nimport { PersonComponent } from './person/person.component';\r\nimport { PeopleComponent } from './people/people.component';\r\nimport { FilmComponent } from './film/film.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PersonComponent,\r\n    PeopleComponent,\r\n    FilmComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    HttpService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<div class=\"person-details\">\r\n  <h3>Details Section</h3>\r\n  <div>Name: {{person.name}}</div>\r\n  <div>Birth year: {{person.birth_year}}</div>\r\n  <div>Gender: {{person.gender}}</div>\r\n  <div>List of films:</div>\r\n  <ul>\r\n    <li *ngFor=\"let film of person.films\">\r\n      <app-film [url]=\"film\"></app-film>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {PeopleService} from '../services/people.service';\r\n\r\nexport interface PersonProps {\r\n  name?: string;\r\n  height?: string;\r\n  mass?: string;\r\n  url?: string;\r\n  birth_year?: string;\r\n  gender?: string;\r\n  films: Array<string>;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-person',\r\n  templateUrl: './person.component.html',\r\n  styleUrls: ['./person.component.scss']\r\n})\r\nexport class PersonComponent implements OnInit {\r\n\r\n  constructor(private peopleService: PeopleService) { }\r\n\r\n  person: PersonProps = { films: [] };\r\n\r\n  ngOnInit(): void {\r\n    this.peopleService.personSubject.subscribe(\r\n      (person: PersonProps) => {\r\n        console.log('Person component personSubject result ==== ', person);\r\n        this.person = person;\r\n        },\r\n      (error: any) => { console.log('Person component  personSubject error ==== ', error); },\r\n      () => { console.log('Person component personSubject complete ==== '); },\r\n      );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {PeopleProps} from '../people/people.component';\r\nimport {HttpService} from '../services/http.service';\r\nimport {PersonProps} from '../person/person.component';\r\nimport {FilmProps} from '../film/film.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PeopleService {\r\n\r\n  peopleSubject: BehaviorSubject<PeopleProps> = new BehaviorSubject({ status: 'OK', count: 0, results: [] });\r\n\r\n  personSubject: BehaviorSubject<PersonProps> = new BehaviorSubject({ films: [] });\r\n\r\n  filmSubject: BehaviorSubject<FilmProps> = new BehaviorSubject({ title: '' });\r\n\r\n  constructor(private httpService: HttpService) {}\r\n\r\n  asObservable(): Observable<PeopleProps> {\r\n    return this.peopleSubject.asObservable();\r\n  }\r\n\r\n  asPersonObservable(): Observable<PersonProps> {\r\n    return this.personSubject.asObservable();\r\n  }\r\n\r\n  asFilmObservable(): Observable<FilmProps> {\r\n    return this.filmSubject.asObservable();\r\n  }\r\n\r\n  next(result: PeopleProps): void {\r\n    this.peopleSubject.next(result);\r\n  }\r\n\r\n  getPeople(url: string): any {\r\n    this.next({...this.peopleSubject.getValue(), ...{ status: 'loading' }});\r\n    this.httpService.get(url).subscribe(\r\n      (response: any) => {\r\n        console.log('People get response: ', response);\r\n        this.next({...response, ...{ status: 'OK' }});\r\n      },\r\n      (err: any) => {\r\n        console.log('People get response: ', err);\r\n      },\r\n      () => {\r\n        console.log('People get FINAL DONE: ');\r\n      });\r\n  }\r\n\r\n  updatePerson(person: PersonProps): void {\r\n    this.personSubject.next(person);\r\n  }\r\n\r\n  updateFilm(film: FilmProps): void {\r\n    this.filmSubject.next(film);\r\n  }\r\n}\r\n","<table class=\"people\">\r\n  <thead>\r\n  <tr>\r\n    <th>Name</th>\r\n    <th>Height</th>\r\n    <th>Mass</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr *ngFor=\"let person of people.results\" (click)=\"updatePerson(person)\">\r\n    <td>{{person.name}}</td>\r\n    <td>{{person.height}}</td>\r\n    <td>{{person.mass}}</td>\r\n    </tr>\r\n  </tbody>\r\n  <tfoot>\r\n  <tr>\r\n    <td colSpan=\"3\">\r\n      {{people.status}}\r\n      <a *ngIf=\"people.previous\"[routerLink]=\"\" (click)=\"!!prevPage()\">Prev</a> |\r\n      <a *ngIf=\"people.next\" [routerLink]=\"\" (click)=\"!!nextPage()\">Next</a>\r\n    </td>\r\n  </tr>\r\n  </tfoot>\r\n</table>\r\n","import {Component, OnInit, Output} from '@angular/core';\r\nimport {PeopleService} from '../services/people.service';\r\nimport {PersonProps} from '../person/person.component';\r\n\r\nexport interface PeopleProps {\r\n  status: string;\r\n  count: number;\r\n  next?: string;\r\n  previous?: string;\r\n  results: Array<PersonProps>;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-people',\r\n  templateUrl: './people.component.html',\r\n  styleUrls: ['./people.component.scss']\r\n})\r\nexport class PeopleComponent implements OnInit {\r\n\r\n  @Output() people: PeopleProps = { status: '', count: 0, results: [] };\r\n\r\n  constructor(\r\n    private peopleService: PeopleService\r\n    ) {\r\n    this.peopleService.asObservable().subscribe(\r\n      (result: any) => {\r\n        console.log('People component peopleService result ==== ', result);\r\n        this.people = result;\r\n      },\r\n      (error: any) => { console.log('People component  peopleService error ==== ', error); },\r\n      () => { console.log('People component peopleService complete ==== '); },\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.peopleService.getPeople('https://swapi.dev/api/people/');\r\n    // this.peopleService.getPeople('http://localhost:4200/api/people/');\r\n  }\r\n\r\n  updatePerson(person: PersonProps): void {\r\n    console.log('updatePerson clicked', person);\r\n    this.peopleService.updatePerson(person);\r\n  }\r\n\r\n  nextPage(e): void {\r\n    console.log('Next page clicked', e);\r\n    this.peopleService.getPeople(this.people.next);\r\n  }\r\n\r\n  prevPage(e): void {\r\n    console.log('Prev page clicked, ', e);\r\n    this.peopleService.getPeople(this.people.previous);\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}